import os
import json
import re          


def changeEntityTerrain():
    for path in os.listdir("level"):
        path = os.path.join(os.path.dirname(__file__), "level\\" + path)
        if path == "converter.py":
            continue
        with open(path) as json_file:
            data = json.load(json_file)
            changed = False
            for x in range(0,12):
                for y in range(0,20):
                    terrain = data["terrain"][x][y]
                    entity = data["entities"][x][y]
                    if entity == "flower":
                        data["entities"][x][y] = "flower_yellow"
                        changed = True
        if changed:
                with open(path, 'w') as outfile:
                    outfile.write(json.dumps(data))

changeEntityTerrain()

entities = {     
    "no_entity":5,
    "tree": 0,
    "box": 1,
    "pushy": 2, 
    "finish": 3, 
    "stone": 4, 
    "sea_star": 6, 
    "seed": 7, 
    "bottle": 8, 
    "statue_red": 9, 
    "statue_green": 11, 
    "statue_blue": 10, 
    "bomb": 12, 
    "crab_baby": 13, 
    "crab_mother": 14,
    "slingshot": 15, 
    "shot": 16, 
    "coconut": 17, 
    "leaf_down": 18, 
    "leaf_up": 19, 
    "leaf_left": 20, 
    "leaf_right": 21, 
    "pirate": 22, 
    "pirate_hut": 23, 
    "buoy": 24, 
    "chest": 25, 
    "coin": 26, 
    "key": 27, 
    "tower": 28,
    "pearl": 29, 
    "shell": 30, 
    "shell_open_with_pearl": 31,
    "count_one": 32,
    "count_two": 33, 
    "count_three": 34, 
    "count_four": 35, 
    "count_five": 36, 
    "flower_yellow": 37, 
    "flower_red": 38, 
    "shell_1": 39, 
    "shell_2": 40, 
    "shell_3": 41, 
    "octopus": 42, 
    "barrel": 43, 
    "leaf_changer_east": 44, 
    "leaf_changer_west": 45, 
    "leaf_changer_north": 46,
    "leaf_changer_south": 47, 
    "logic_gate_and": 48, 
    "logic_gate_or": 49,
    "logic_gate_xor": 50, 
    "logic_gate_lamp": 51, 
    "lever":52,
    "power_block":53,
    "logic_gate_not":54, 
    "energy":55, 
    "button":56, 
    "count_down":57, 
    "repeater_north":58, 
    "repeater_south":59, 
    "repeater_west":60, 
    "repeater_east":61, 
}

terrains = {
    "water": 0, 
    "box_water": 1, 
    "sand": 2, 
    "sand_top_left": 3,
    "sand_top_right": 4, 
    "sand_bottom_left": 5, 
    "sand_bottom_right": 6, 
    "grass": 7, 
    "grass_top_left": 8, 
    "grass_top_right": 9, 
    "grass_bottom_left": 10,
    "grass_bottom_right": 11, 
    "spring": 12,
    "sand_with_water": 13, 
    "sand_with_farm": 14, 
    "statue_finish_red": 15, 
    "statue_finish_green": 17, 
    "statue_finish_blue": 16, 
    "bomb_field": 18, 
    "hole": 19, 
    "spike_pressure_plate": 20, 
    "spikes": 21,
    "boat": 22, 
    "teleporter": 23,
    "water_invisible_pressure_plate": 25,
    "water_invisible": 26, 
    "coconut_tunnel": 27, 
    "coconut_tunnel_finish": 28, 
    "item_teleporter": 29, 
    "ice": 30, 
    "flower_red_pressure_plate": 31, 
    "flower_pressure_plate": 32, 
    "string_pressure_plate": 33, 
    "changeable_flower_red": 34, 
    "changeable_flower_green": 35, 
    "barrel_finish": 36,
    "cable": 37, 
    "logic_pressure_plate": 38,
    "door": 39,
}


def addRedundandZero(value, places):
    value = str(value)
    while len(value) < places:
        value = "0" + value
    return value

def getBinaryString(value):
    return "{:08b}".format(value)

def getBinary6BitsString(value):
    return "{:06b}".format(value)

def binaryLevelname(levelname):
    return "".join(f"{ord(i):08b}" for i in levelname)


def createLevelCode(): 
    for path in os.listdir("level"):
        path = os.path.join(os.path.dirname(__file__), "level\\" + path)
        with open(path) as json_file:
            data = json.load(json_file)
            
            version = getBinaryString(1)
            
            terrainBinary = ""
            entityBinary = ""
            
            for x in range(0,12):
                for y in range(0,20):
                    terrain = data["terrain"][x][y]
                    entity = data["entities"][x][y]
                    
                    terrainBinary += getBinary6BitsString(terrains[terrain])
                    entityBinary += getBinary6BitsString(entities[entity])
            
            levelname = binaryLevelname(data["name"])
            print(data["name"])
            
            binary = version + terrainBinary + entityBinary + levelname
            print(binary)
            hstr = '%0*X' % ((len(binary) + 3) // 4, int(binary, 2))
            print(hstr)
            data["code"] = hstr;
        with open(path, 'w') as outfile:
            outfile.write(json.dumps(data))


def getByValue(dict, value):
    keys = dict.keys()
    values = dict.values()
    return list(keys)[list(values).index(value)]

def hexToBin(hex):
    return format(int(hex, 16), '0>4b')

def hexStringToBinaryString(hex):
    binary = ""
    for hexChar in hex:
        binary += hexToBin(hexChar)
    return binary

print(hexStringToBinaryString("AEAEAEAEFF"))

def getIntFromBinary(binary):
    return int(binary, 2)

def decode_binary_string(s):
    return ''.join(chr(int(s[i*8:i*8+8],2)) for i in range(len(s)//8))
        
def createALevelFromCode(number,filename, hardcodedName, code):
    level = {
        "number" : number,
        "code" : code,
        "width": 20,
        "height" : 12,
        "terrain" : [],
        "entities" : [],
        "name":""
        
    }
    
    codeAsBinary = hexStringToBinaryString(code)
    
    versionBinaryString = codeAsBinary[0:8]
    codeAsBinary = codeAsBinary[8:]
    version = getIntFromBinary(versionBinaryString)

    for x in range (0,12):
        level["terrain"].append([])
        for y in range(0,20):
            terrainType = codeAsBinary[0:6]
            codeAsBinary = codeAsBinary[6:]
            level["terrain"][x].append(getByValue(terrains, getIntFromBinary(terrainType)))
    for x in range (0,12):
        level["entities"].append([])
        for y in range(0,20):
            entityType = codeAsBinary[0:6]
            codeAsBinary = codeAsBinary[6:]
            level["entities"][x].append(getByValue(entities, getIntFromBinary(entityType)))
    level["name"] = hardcodedName
    path = os.path.join(os.path.dirname(__file__), "level\\" + filename)
    with open(path, 'w') as outfile:
        outfile.write(json.dumps(level))
            
    
createALevelFromCode(185, "185_Latchi Latchi.json", "Latchi Latchi", "010000000000000000c20840000000000000000000c20820820821000000000000000000a59659659650840000000000000001650820820a50820000000000c21000250a59650a50821000000000820800250820a59420821800000000820820a59429429429420000000001420970820829420829460000000000050820820829420829400000000000001420820820820820840000000000000001420820825c2086000000000000000000142082086000000000145145145145145145145145145145145145145005140145179145605145158145145145145145145145145145145145145145145145145145145145145145145145145145145145145145145143005145176145176145145145145005145145171145171145145145145145145145145004145105145145145145145142144145000145145145145145004145005d451451451456051451451450051051451451451451451581451451451441451451451451454c6576656c6e616d65")           
            
createALevelFromCode(186, "186_Latchi Fatchi.json", "Latchi Fatchi", "010039c40000000000000000000000000c29420000030820821160000000000820821000020800820820821000000829659659659650820820825440000829420800000a50820820820820000829429659650a50820820940820000829420820250820820820820821000829650a50259429650820820820801420820a50000829420825c2082180002082082100142082082082082000005097082180002082082082086000000000146000005082086000000000145145145145145145145145145145145140145145173145156145145145145d851051451760051571401451451451451401451451441451451401451451451451451451451451446c01451451451451051451731459c5105145177145d80145176176145145159145145145c4514517114514014568514514510300514514514514514568014514015a175145145d05145005685145145145145145145142dc51451451451451451451451451451451451451454c6576656c6e616d65")           
#createALevelFromCode(177, "177_Counti Pressi.json", "Counti Pressi", "010000000000000c20840000000000000000030820820820820821000000000000022072420820820820821000000000c81c71c208208208208208000000008a1c72c20820a50820821800000000821c70820820a508208200000000014228b0820820a50820820000000000050820820820820820860000000000001420820820820821800000000000000000050820860000000000000000000000000000000000000000000000000000000000000000000000001451451451451451451451451451451451451451451450051451451451451451450051400c0105145140145145145145145005145179145145145145145145105145145145145145145145145145145177145145145145145145145145140dc51451451441451451451451451771451451781451451451451451451451450851451401451451451451451451451451451451451451451451451451451451451451451451451451451451451451451451451451454c6576656c6e616d65")          
#createALevelFromCode(178, "178_Andurino.json", "Andurino", "010000000000000000000000000000000000000000000c208208210000000000000000000308208220908400000000000000308208208228724200000000000308208208208208a2c20000000000c20820820820a50820821000000000822072420829429420820800000000822871c908294294208208000000014208a1cb0820820820821800000000001420820820820820860000000000000000001420821800000000000000000000000000000000000000001451451451451451451451451451451451451451451451451451451451451451451451451451401441451451451451451451450c5145145005145145145145145145145173145105145145145145145145145145145144145145145140144145145170145145145145145145145005145145145dc5145145145145145145145d05d05dc51451451451451450051451421451451451451451451451451451451451451451451451451451451451451451451451454c6576656c6e616d65")   
#createALevelFromCode(179, "179_Orderino.json", "Orderino", "010000000000000000000000000000000000000000000c20840000000000000000000000030820820820840000000000000030820820820820821000000000000c20820820820820820800000000000829429420820829420840000000000a50a50820820a50a50820000000000a50820820820820a50860000000000820882420822090820800000000001420871c90821c724218000000000000508a1cb0822871c200000000000000014208208208a2c6000000145145145145145145145145145145145145145145145145145145145145145145145145003005145145145145145145140145145145145140145145145145145cc5cf7177145cc5145145145145145140145145144145145145145145145c45d05145d05c451401451451450051441451451401451451451451451751451050851451741451451451451451401451451450051451451451451451050051451401451451451451451451451451451451451451454c6576656c6e616d65")
#createALevelFromCode(180, "180_Entiodi.json", "Entiodi", "010000000000000000000000000000000000000000000000000000000000000000000000c20840000000030840000000000c20820820840000020820000000032071c90820a50000029420000000021c71c71c90a59659650a51000000022871c71c70882420020a508000000508a1c71c70871c20050820800000001422871cb08a2c20001421800000000050820820820820000000000000000000000050820860000000000000000000000000000000000000001451451451451451451451451451451451451451451451451451451451451451451451400c0145145145145145145145145145145105145145cc5145145145145145105145145145145145145145005005145145145145c85145145145145145105145145145145145145145144140145d450051451751451451451451451451451451451451451451451451451450851451451451451451451451451451451401451451451451451451451451451451451451454c6576656c6e616d65")    
#createALevelFromCode(181, "181_Negati.json", "Negati", "010000000000000030840000000000000000000000c20820820840000000000000000c20820820820820840000000000000820820820a50820821000000000030820820820820820820840000000022090820820a50820820860000000022872420a594296594208000000000208a2c20a50820820821800000000050820820820820820820000000000000050820820860001460000000000000000050860000000000000000000000000000000000000000000001451451451451451441451451451451451451451451450051451451451451451451451400c0173145145145145145145140105145145145140145145145145145145145176145145145145145145145145145145145145145145145145140145145171145145105145145140145145145145145d451451451451451441451751451451451451451451451451421451451451401451451451451451451451451451451451451451451451451451451451451451454c6576656c6e616d65")
#createALevelFromCode(182, "182_Andi Net.json", "Andi Net", "010000000030820820820820821000000000030822090820820820820821000000c20881cb0a50820a596508208400308294a2e59429650a50822090820022099420a50820a50a50881c724200228b96594294294296508a1c71c20020820820829429420a50822872c20020820a59659429420a50820820860029659650820a59420a594208208000508208824296508208208208218000014208a2c2942082082082086000000000005082082082082180000000145145145145145003005145145145145145145005173145145145145145145145d05145145145005145d05145145145145145171145145145145145145145144145145145145145145145145005145170145170145145140144145145dc5145145145145177145145145d051451451451451451451451451451451451051451451451741451451450051451451451451451451451451451451401741451421441450051451451451451451451451451451451454c6576656c6e616d65")
#createALevelFromCode(183, "183_Repeati Schiebi.json", "Repeati Schiebi", "010000000000c20820820821000000000000000e59650a59420820821000000000030a50820829420820820840000000e59429650a50820001420821000000a50820a50820820000020820800000820820a50820820000020821800030a50820a50820820000020820000020a59659650820820820820860000020a50822090882420820820800000050820821c71c71c20820821800000001420822871c72c2082086000000000005082082082082180000000000145145145145145144003005145145145145145145cc5145145145145145145145145145145140145145144145145145170145145c45145145145145145145005145145145145145145005145176145145105145145145145145145145145145145f45145145145145144145145145145145145145144145145145145005dc51451451451451451451741451451401450851450051451451451451451451051451451451451451450051451451451451451451454c6576656c6e616d65")
#createALevelFromCode(184, "184_Clockerino.json", "Clockerino", "010000000000000c21000000000000000000000030820a50840000000000000000000c82420a59650840000000000000032071e59420a50821000000000000c22872e50820a50820840000000000820a59420820a50820860000000000820a50820820820820800000000000a59429659420a5082080000000000142942942082082082180000000000002082082082082086000000000000005082082082086000000000000000000000000000000000000000000145145145145145145145145145145145145145003039145145145145145145145145145145145144145145145145140140145171145dc5005145145145145145005145145dc514514514514517314517117c145dc514514514514517614514514514517a145145145145005170145145145145145145145145145145145145ec5140105145145145145d05e050851451451451451451451401451451451001451451451451451451451451451451451451451454c6576656c6e616d65")
#    
#    
#    
#getByValue(entities, 53)    
    
    
 
            
#createLevelCode()   
            

